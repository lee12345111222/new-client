{"version":3,"file":"static/js/379.d5e85205.chunk.js","mappings":"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","sources":["components/ui/Backdrop.tsx","container/landingPage/agenda/DayOne.tsx","container/landingPage/agenda/DayTwo.tsx","container/landingPage/agenda/Agenda.tsx","container/landingPage/home/LoginForm.tsx","container/landingPage/home/Google.tsx","container/landingPage/Countdown.tsx","container/landingPage/home/Home.tsx","container/landingPage/SideBar.tsx","container/landingPage/HeaderNav.tsx","container/landingPage/LandingPage.tsx"],"sourcesContent":["import React, { FC, memo } from 'react'\n\ntype BackdropProps = {\n    showBackdrop: boolean\n}\n\nconst Backdrop: FC<BackdropProps> = ({ showBackdrop }) => {\n    const classes = ['Backdrop']\n\n    return showBackdrop ? <button className={classes.join(' ')}></button> : null\n}\n\nexport default memo(Backdrop)\n","import React, { FC, memo } from 'react'\nimport { useIntl } from 'react-intl'\nimport Slider from 'react-slick'\n\ntype AgendaItemProps = {\n    venue: string\n    symbols: string[]\n    jsonData: any\n}\nconst DayOne: FC<AgendaItemProps> = ({ symbols, venue, jsonData }) => {\n    const intl = useIntl()\n\n    const settings = {\n        arrows: true,\n        infinite: false,\n        speed: 800,\n        slidesToShow: 4,\n        slidesToScroll: 4,\n        initialSlide: 0,\n        autoplay: false,\n        dots: true,\n        responsive: [\n            {\n                breakpoint: 4000,\n                settings: {\n                    slidesToShow: 4,\n                    slidesToScroll: 4,\n                    infinite: false,\n                    dots: true,\n                    arrows: true,\n                },\n            },\n            {\n                breakpoint: 1600,\n                settings: {\n                    slidesToShow: 3,\n                    slidesToScroll: 3,\n                    infinite: false,\n                    dots: true,\n                    arrows: true,\n                },\n            },\n            {\n                breakpoint: 1180,\n                settings: {\n                    slidesToShow: 2,\n                    slidesToScroll: 2,\n                    infinite: false,\n                    dots: true,\n                    arrows: false,\n                },\n            },\n            {\n                breakpoint: 650,\n                settings: {\n                    swipe: true,\n                    infinite: false,\n                    slidesToShow: 1,\n                    slidesToScroll: 1,\n                    autoplay: false,\n                    dots: true,\n                    arrows: false,\n                },\n            },\n        ],\n    }\n\n    const cards =\n        symbols && symbols.length > 0\n            ? symbols.map((symbol: string) => {\n                  if (jsonData[`${venue}_agenda_${symbol}.Team`].trim().toLowerCase() === 'day1') {\n                      return (\n                          <div key={`${symbol}`} className=\"landing-page-agenda-slide-item\">\n                              <div className=\"landing-page-agenda-slide-item-time\">\n                                  <span>\n                                      {intl.formatMessage({\n                                          id: `${venue}_agenda_${`${symbol}`}.Local Time From`,\n                                      })}\n                                  </span>\n                                  <span> - </span>\n                                  <span>\n                                      {intl.formatMessage({\n                                          id: `${venue}_agenda_${`${symbol}`}.Local Time Ends`,\n                                      })}\n                                  </span>\n                              </div>\n                              <div className=\"landing-page-agenda-slide-item-topic\">\n                                  <span>\n                                      {intl.formatMessage({\n                                          id: `${venue}_agenda_${`${symbol}`}.Topic`,\n                                      })}\n                                  </span>\n                              </div>\n                              <div className=\"landing-page-agenda-slide-item-speaker\">\n                                  <div className=\"landing-page-agenda-slide-img-container\">\n                                      <img\n                                          className=\"landing-page-agenda-slide-img\"\n                                          src={intl.formatMessage({\n                                              id: `${venue}_agenda_${`${symbol}`}.Img Url`,\n                                          })}\n                                          alt={`${symbol}`}\n                                      />\n                                  </div>\n                                  <div className=\"landing-page-agenda-slide-content\">\n                                      <div className=\"landing-page-agenda-slide-content-name\">\n                                          {intl.formatMessage({\n                                              id: `${venue}_agenda_${`${symbol}`}.Speaker Name`,\n                                          })}\n                                      </div>\n\n                                      <div className=\"landing-page-agenda-slide-content-title\">\n                                          {intl.formatMessage({\n                                              id: `${venue}_agenda_${`${symbol}`}.Company name`,\n                                          })}\n                                      </div>\n                                      <div className=\"landing-page-agenda-slide-content-title\">\n                                          {intl.formatMessage({\n                                              id: `${venue}_agenda_${`${symbol}`}.Speaker Title`,\n                                          })}\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      )\n                  }\n              })\n            : null\n\n    return (\n        <div>\n            <Slider {...settings}>{cards}</Slider>\n        </div>\n    )\n}\n\nexport default memo(DayOne)\n","import React, { FC, memo } from 'react'\nimport { useIntl } from 'react-intl'\nimport Slider from 'react-slick'\n\n// import { LandingPageImages } from '../../../utils/links'\n\ntype AgendaItemProps = {\n    venue: string\n    symbols: string[]\n    jsonData: any\n}\nconst DayTwo: FC<AgendaItemProps> = ({ symbols, venue, jsonData }) => {\n    const intl = useIntl()\n\n    const settings = {\n        infinite: false,\n        speed: 800,\n        slidesToShow: 4,\n        slidesToScroll: 4,\n        initialSlide: 0,\n        autoplay: false,\n        dots: true,\n        responsive: [\n            {\n                breakpoint: 4000,\n                settings: {\n                    slidesToShow: 4,\n                    slidesToScroll: 4,\n                    infinite: false,\n                    dots: true,\n                    arrows: true,\n                },\n            },\n            {\n                breakpoint: 1600,\n                settings: {\n                    slidesToShow: 3,\n                    slidesToScroll: 3,\n                    infinite: false,\n                    dots: true,\n                    arrows: true,\n                },\n            },\n            {\n                breakpoint: 1180,\n                settings: {\n                    slidesToShow: 2,\n                    slidesToScroll: 2,\n                    infinite: false,\n                    dots: true,\n                    arrows: false,\n                },\n            },\n            {\n                breakpoint: 650,\n                settings: {\n                    swipe: true,\n                    infinite: false,\n                    slidesToShow: 1,\n                    slidesToScroll: 1,\n                    autoplay: false,\n                    dots: true,\n                    arrows: false,\n                },\n            },\n        ],\n    }\n\n    const cards =\n        symbols && symbols.length > 0\n            ? symbols.map((symbol: string) => {\n                  if (jsonData[`${venue}_agenda_${symbol}.Team`].trim().toLowerCase() === 'day2') {\n                      return (\n                          <div key={`${symbol}`} className=\"landing-page-agenda-slide-item\">\n                              <div className=\"landing-page-agenda-slide-item-time\">\n                                  <span>\n                                      {intl.formatMessage({\n                                          id: `${venue}_agenda_${`${symbol}`}.Local Time From`,\n                                      })}\n                                  </span>\n                                  <span> - </span>\n                                  <span>\n                                      {intl.formatMessage({\n                                          id: `${venue}_agenda_${`${symbol}`}.Local Time Ends`,\n                                      })}\n                                  </span>\n                              </div>\n                              <div className=\"landing-page-agenda-slide-item-topic\">\n                                  <span>\n                                      {intl.formatMessage({\n                                          id: `${venue}_agenda_${`${symbol}`}.Topic`,\n                                      })}\n                                  </span>\n                              </div>\n                              <div className=\"landing-page-agenda-slide-item-speaker\">\n                                  <div className=\"landing-page-agenda-slide-img-container\">\n                                      <img\n                                          className=\"landing-page-agenda-slide-img\"\n                                          src={intl.formatMessage({\n                                              id: `${venue}_agenda_${`${symbol}`}.Img Url`,\n                                          })}\n                                          alt={`${symbol}`}\n                                      />\n                                  </div>\n                                  <div className=\"landing-page-agenda-slide-content\">\n                                      <div className=\"landing-page-agenda-slide-content-name\">\n                                          {intl.formatMessage({\n                                              id: `${venue}_agenda_${`${symbol}`}.Speaker Name`,\n                                          })}\n                                      </div>\n\n                                      <div className=\"landing-page-agenda-slide-content-title\">\n                                          {intl.formatMessage({\n                                              id: `${venue}_agenda_${`${symbol}`}.Company name`,\n                                          })}\n                                      </div>\n                                      <div className=\"landing-page-agenda-slide-content-title\">\n                                          {intl.formatMessage({\n                                              id: `${venue}_agenda_${`${symbol}`}.Speaker Title`,\n                                          })}\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      )\n                  }\n              })\n            : null\n\n    return (\n        <div>\n            <Slider {...settings}>{cards}</Slider>\n        </div>\n    )\n}\n\nexport default memo(DayTwo)\n","import React, { FC, /*  Fragment, */ useContext, useEffect, useState } from 'react'\nimport { Tabs } from 'antd'\nimport { useIntl } from 'react-intl'\nimport { useLocation } from 'react-router-dom'\n// import Slider from 'react-slick';\nimport { localeContext, LocaleProps } from '../../../index'\n// import AgendaItem from './AgendaItem';\n// import { LandingPageImages } from '../../../utils/links';\nimport DayOne from './DayOne'\nimport DayTwo from './DayTwo'\n\nconst { TabPane } = Tabs\n\ntype AgendaProps = { eventSlug: string }\n\nconst Agenda: FC<AgendaProps> = ({ eventSlug }) => {\n    const { jsonData } = useContext(localeContext) as LocaleProps\n\n    const intl = useIntl()\n\n    const location = useLocation()\n\n    // 該會場 agenda 數量  ([1, 2, 3 ...])\n    // const [topics,  setTopics] = useState<string[]>([]);\n    // agenda 標示 ([1_1, 1_2 ...])\n    const [symbols, setSymbols] = useState<string[]>([])\n    // agenda 代碼 (T1S2...)\n    const [venue, setVenue] = useState<string>(process.env.REACT_APP_DEFAULT_EVENT_ID as string)\n\n    /**\n     * 判斷是否帶上 event id\n     * 蒐集 agenda 標示資訊及 agenda 代碼\n     */\n    useEffect(() => {\n        if (eventSlug) {\n            const symbols = handleGetSymbolAndTopics(eventSlug)\n\n            setVenue(eventSlug)\n            setSymbols(symbols)\n        } else {\n            const symbols = handleGetSymbolAndTopics(process.env.REACT_APP_DEFAULT_EVENT_ID as string)\n\n            setVenue(process.env.REACT_APP_DEFAULT_EVENT_ID as string)\n            setSymbols(symbols)\n        }\n    }, [location, venue, eventSlug])\n\n    /**\n     * @param ve 活動 event id\n     * @returns symbols array\n     * 整理 agenda 標示\n     */\n    const handleGetSymbolAndTopics = (ve: string): string[] => {\n        const keys = Object.keys(jsonData)\n        const topics = keys.filter((key) => {\n            return key.includes(ve) && key.includes('#topic')\n        })\n\n        const spks = keys.filter((key) => {\n            return key.includes(ve) && key.includes('#spk')\n        })\n\n        const symbols = topics.map((topic, i) => {\n            return `${jsonData[topic]}_${jsonData[spks[i]]}`\n        })\n\n        // const topicVals = topics.map((topic) => {\n        //     return `${jsonData[topic]}`;\n        // });\n\n        // setTopics([...new Set(topicVals)]);\n\n        return symbols\n    }\n\n    // slick config\n    // const settings = {\n    //     dots: true,\n    //     infinite: false,\n    //     speed: 800,\n    //     slidesToShow: 4,\n    //     slidesToScroll: 2,\n    //     initialSlide: 0,\n    //     autoplay: false,\n    //     responsive: [\n    //         {\n    //             breakpoint: 1800,\n    //             settings: {\n    //                 slidesToShow: 3,\n    //                 slidesToScroll: 2,\n    //                 dots: true,\n    //                 infinite: false,\n    //                 initialSlide: 0,\n    //             },\n    //         },\n    //         {\n    //             breakpoint: 1300,\n    //             settings: {\n    //                 slidesToShow: 2,\n    //                 slidesToScroll: 1,\n    //                 initialSlide: 0,\n    //                 dots: true,\n    //                 arrows: false,\n    //             },\n    //         },\n    //         {\n    //             breakpoint: 650,\n    //             settings: {\n    //                 slidesToShow: 1,\n    //                 slidesToScroll: 1,\n    //                 autoplay: false,\n    //                 dots: true,\n    //                 arrows: false,\n    //                 swipe: true,\n    //                 infinite: false,\n    //             },\n    //         },\n    //     ],\n    // };\n\n    return (\n        <div className=\"landing-page-agenda-background\" id=\"agenda\">\n            <div className=\"landing-page-agenda-wrap\">\n                <h1 className=\"page-title\">{intl.formatMessage({ id: 'landingPage.nav_agenda' })}</h1>\n                <div className=\"landing-page-agenda-slide-container\">\n                    <Tabs\n                        defaultActiveKey=\"1\"\n                        size=\"large\"\n                        animated={{ inkBar: false, tabPane: false }}\n                        tabBarStyle={{\n                            color: '#000',\n                        }}\n                        destroyInactiveTabPane={false}\n                    >\n                        <TabPane\n                            tab={intl.formatMessage({ id: 'landingPage.speaker_category1' })}\n                            key=\"1\"\n                            className=\"landing-page-agenda-slide\"\n                        >\n                            <DayOne symbols={symbols} jsonData={jsonData} venue={eventSlug} />\n                        </TabPane>\n                        <TabPane\n                            tab={intl.formatMessage({ id: 'landingPage.speaker_category2' })}\n                            key=\"2\"\n                            className=\"landing-page-agenda-slide\"\n                        >\n                            <DayTwo symbols={symbols} jsonData={jsonData} venue={eventSlug} />\n                        </TabPane>\n                    </Tabs>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Agenda\n","import React, { FC, memo } from 'react'\nimport { useIntl } from 'react-intl'\n\nimport '@culturehq/add-to-calendar/dist/styles.css'\nimport { Input } from 'antd'\n\nimport { LoginFormProps } from './Home'\n\nconst LoginForm: FC<LoginFormProps> = ({ handleSubmit, eventOpen, code, HandleInputChange }) => {\n    const intl = useIntl()\n\n    return (\n        <div className=\"landing-page-login-content\">\n            <div className=\"landing-page-login-content-box\">\n                <form onSubmit={handleSubmit} className=\"login-form\">\n                    <Input\n                        disabled={!eventOpen}\n                        type=\"text\"\n                        value={code}\n                        className=\"login-input\"\n                        onChange={HandleInputChange}\n                        placeholder={\n                            eventOpen\n                                ? intl.formatMessage({ id: 'landingPage.input_placeholder_open' })\n                                : intl.formatMessage({ id: 'landingPage.input_placeholder_notOpen' })\n                        }\n                    />\n\n                    <button className=\"login-btn\" disabled={!eventOpen}>\n                        {eventOpen\n                            ? intl.formatMessage({ id: 'landingPage.button_text_open' })\n                            : intl.formatMessage({ id: 'landingPage.button_text_not_open' })}\n                    </button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default memo(LoginForm)\n","import React, { FC, memo, useEffect, useState } from 'react'\nimport { useIntl } from 'react-intl'\nimport { icons } from '../../../lib/icons'\n\ntype GoogleProps = {\n    eventSlug: string\n}\n\nconst Google: FC<GoogleProps> = () => {\n    const intl = useIntl()\n\n    const [paragraph, setParagraph] = useState<any>('')\n\n    useEffect(() => {\n        const p = intl.formatMessage({ id: 'landingPage.event_intro' })\n\n        setParagraph(p)\n    }, [intl.formatMessage({ id: 'landingPage.event_intro' })])\n\n    return (\n        <div className=\"landing-page-google-content\">\n            <article className=\"landing-page-home-intro\">\n                <div dangerouslySetInnerHTML={{ __html: paragraph }} />\n                \n                {/* <a className=\"calendar_btn_mo\" target=\"_blank\" href=\"https://d.uppmkt.com/2207cxoc\" rel=\"noreferrer\">\n                    <div className=\"calendarIconBox\">{icons.bell()}</div>\n                </a> */}\n            </article>\n            <div className=\"landing-page-home-intro-time\">\n                    {intl.formatMessage({ id: 'landingPage.event_intro-time' })}\n                </div>\n        </div>\n    )\n}\n\nexport default memo(Google)\n","import React, { FC, memo, Dispatch, SetStateAction } from 'react'\nimport Ctd from 'react-countdown'\n\ntype CountdownProps = {\n    classes: string\n    setNavigateSlug?: Dispatch<SetStateAction<string>>\n}\n\nconst Countdown: FC<CountdownProps> = ({ classes }) => {\n    return (\n        <Ctd\n            date={parseInt(process.env.REACT_APP_EVENT_COUNTDOWN as string)}\n            intervalDelay={0}\n            renderer={({ days, hours, minutes, seconds }) => {\n                return (\n                    <div className={classes}>\n                        <time>\n                            <span className=\"landing-page-count-col\">\n                                <span className=\"landing-page-count-down-d count-down-num\">{days}</span>\n                                <span\n                                    className=\"landing-page-count-down-word home-non\"\n                                    id=\"landing-page-count-down-days\"\n                                >\n                                    day\n                                </span>\n                            </span>\n                            <span className=\"landing-page-count-col\">\n                                <span className=\"landing-page-count-down-h count-down-num\">{hours}</span>\n                                <span\n                                    className=\"landing-page-count-down-word home-non\"\n                                    id=\"landing-page-count-down-hours\"\n                                >\n                                    hour\n                                </span>\n                            </span>\n                            <span className=\"landing-page-count-col\">\n                                <span className=\"landing-page-count-down-m count-down-num\">{minutes}</span>\n                                <span\n                                    className=\"landing-page-count-down-word home-non\"\n                                    id=\"landing-page-count-down-mins\"\n                                >\n                                    min\n                                </span>\n                            </span>\n                            <span className=\"landing-page-count-col\">\n                                <span className=\"landing-page-count-down-s count-down-num\">{seconds}</span>\n                                <span\n                                    className=\"landing-page-count-down-word home-non\"\n                                    id=\"landing-page-count-down-secs\"\n                                >\n                                    sec\n                                </span>\n                            </span>\n                        </time>\n                    </div>\n                )\n            }}\n        />\n    )\n}\n\nexport default memo(Countdown)\n","import React, { FC, FormEvent, ChangeEvent, Dispatch, SetStateAction } from 'react'\nimport { Routes, Route } from 'react-router-dom'\nimport Lottie from 'react-lottie'\nimport { useIntl } from 'react-intl'\n\nimport LoginForm from './LoginForm'\nimport Google from './Google'\nimport '../../../styles/homeTransition.scss'\n\nimport Countdown from '../Countdown'\nimport { icons } from '../../../lib/icons'\nimport { LottieJSON } from '../../../utils/links'\n\n\n\nexport type LoginFormProps = {\n    handleSubmit(e: FormEvent<HTMLFormElement>): void\n    eventOpen: boolean\n    code: string\n    HandleInputChange(e: ChangeEvent<HTMLInputElement>): void\n    eventSlug: string\n}\n\n\nconst Home: FC<LoginFormProps> = ({\n    handleSubmit,\n    eventOpen,\n    code,\n    HandleInputChange,\n    eventSlug,\n}) => {\n\n    const intl = useIntl()\n\n    return (\n        <div className=\"landing-page-home-background\" id=\"home\">\n            <div className=\"landing-page-home-kv-lottie\">\n                <Lottie\n                    isClickToPauseDisabled={true}\n                    options={{\n                        loop: true,\n                        autoplay: true,\n                        animationData: LottieJSON.KV_PC,\n                        rendererSettings: {\n                            preserveAspectRatio: 'xMidYMid slice'\n                        }\n                    }}\n                ></Lottie>\n            </div>\n\n            <div className=\"landing-page-home-wrap\">\n                <div className=\"landing-page-home-content\">\n                    <div className=\"landing-page-home-title\">\n                        <div className=\"landing-page-home-title-box\">\n                            <div className=\"landing-page-home-title-box-title\">\n                                {intl.formatMessage({ id: 'landingPage.event_title' })}\n                            </div>\n                            <div className=\"landing-page-home-title-box-title\">\n                                {intl.formatMessage({ id: 'landingPage.event_title2' })}\n                            </div>\n                            <Google eventSlug={eventSlug} />\n                        </div>\n                    </div>\n                    <a className=\"landing-page-home-calendarBtn-mo\" target=\"_blank\" href=\"https://googleads.link/2212cxoc\" rel=\"noreferrer\">\n                        <div className=\"calendarIconBox\">{icons.bell()}</div>\n                        {intl.formatMessage({ id: 'landingPage.calendar_btn_google' })}\n                    </a>\n                    <div className=\"landing-page-home-kv-lottie-mo\">\n                        <Lottie\n                            isClickToPauseDisabled={true}\n                            options={{\n                                loop: true,\n                                autoplay: true,\n                                animationData: LottieJSON.KV_MO,\n                                rendererSettings: {\n                                    preserveAspectRatio: 'xMidYMid slice'\n                                }\n                            }}\n                        ></Lottie>\n                    </div>\n                    <label className=\"landing-page-home-add-to-calendar-dropdown\">\n                        <div className=\"dd-button\">\n                            <div className=\"calendarIconBox\">{icons.bell()}</div>\n                            {intl.formatMessage({ id: 'landingPage.calendar_btn' })}\n                        </div>\n\n                        <input type=\"checkbox\" className=\"dd-input\" id=\"test\" />\n\n                        <ul className=\"dd-menu\">\n                            <li>\n                                <a target=\"_blank\" href=\"https://googleads.link/2212cxoc\" rel=\"noreferrer\">\n                                    {intl.formatMessage({ id: 'landingPage.calendar_btn_google' })}\n                                </a>\n                            </li>\n                            <li>\n                                <a target=\"_blank\" href=\"https://googleads.link/2212cxoci\" rel=\"noreferrer\">\n                                    {intl.formatMessage({ id: 'landingPage.calendar_btn_ics' })}\n                                </a>\n                            </li>\n                        </ul>\n                    </label>\n\n                    <Countdown classes={'landing-page-count-down'} />\n\n                    <LoginForm\n                        handleSubmit={handleSubmit}\n                        eventOpen={eventOpen}\n                        code={code}\n                        HandleInputChange={HandleInputChange}\n                        eventSlug={eventSlug}\n                    />\n\n\n                </div>\n                <div className=\"landing-page-home-content-right\">\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import React, { FC } from 'react'\nimport { useIntl } from 'react-intl'\nimport AnchorLink from 'react-anchor-link-smooth-scroll'\n\nimport { icons } from '../../lib/icons'\n\ntype SideBarProps = {\n    eventSlug: string\n    handleBackdropShow?: () => void\n    handleBackdropRemove?: () => void\n    showMenu: boolean\n}\n\nconst SideBar: FC<SideBarProps> = ({ showMenu, handleBackdropRemove, handleBackdropShow }) => {\n    const intl = useIntl()\n\n    return (\n        <nav className=\"sidebar-nav\">\n            <label className=\"label_ham_svgBox PC_non MO_show\" htmlFor=\"switch\">\n                <button className=\"ham_svgBox\" onClick={handleBackdropShow}>\n                    {icons.menu_icon()}\n                </button>\n            </label>\n            <input\n                className=\"displayNon menu-input\"\n                checked={showMenu}\n                onChange={handleBackdropShow}\n                id=\"switch\"\n                type=\"checkbox\"\n            />\n            {/* 頁面滑動 */}\n            <div className=\"sidebar-menu\">\n                <AnchorLink href=\"#home\" className=\"link-a\">\n                    <div\n                        className=\"sidebar-menu-item\"\n                        role=\"button\"\n                        onKeyDown={handleBackdropRemove}\n                        onClick={handleBackdropRemove}\n                        tabIndex={0}\n                    >\n                        {icons.home_icon()}\n                        <p className=\"sidebar-menu-item-text\">{intl.formatMessage({ id: 'landingPage.nav_home' })}</p>\n                    </div>\n                </AnchorLink>\n                <AnchorLink href=\"#agenda\" className=\"link-a\">\n                    <div\n                        className=\"sidebar-menu-item\"\n                        role=\"button\"\n                        onKeyDown={handleBackdropRemove}\n                        onClick={handleBackdropRemove}\n                        tabIndex={0}\n                    >\n                        {icons.agenda_icon()}\n                        <p className=\"sidebar-menu-item-text\">{intl.formatMessage({ id: 'landingPage.nav_agenda' })}</p>\n                    </div>\n                </AnchorLink>\n\n                <AnchorLink href=\"#faq\" className=\"link-a\">\n                    <div\n                        className=\"sidebar-menu-item\"\n                        role=\"button\"\n                        onKeyDown={handleBackdropRemove}\n                        onClick={handleBackdropRemove}\n                        tabIndex={0}\n                    >\n                        {icons.faq_icon()}\n                        <p className=\"sidebar-menu-item-text\">{intl.formatMessage({ id: 'landingPage.nav_faq' })}</p>\n                    </div>\n                </AnchorLink>\n            </div>\n        </nav>\n    )\n}\n\nexport default SideBar\n","import React, { FC } from 'react'\n\nimport SideBar from './SideBar'\nimport { LandingPageImages } from '../../utils/links'\n\ntype HeaderNavProps = {\n    handleBackdropShow?: () => void\n    handleBackdropRemove?: () => void\n    showMenu: boolean\n    eventSlug: string\n}\n\nconst HeaderNav: FC<HeaderNavProps> = ({ showMenu, handleBackdropShow, eventSlug, handleBackdropRemove }) => {\n    return (\n        <nav className=\"landing-page-layout-header\">\n            <div className=\"landing-page-header-logo\">\n                <img className=\"google-svg\" src=\"https://oss.uppmkt.com/cxo/img/kv/google.svg\" alt=\"Google\" />\n            </div>\n            <div className=\"landing-page-header-lang-selector-container\">\n                <div>\n                    <SideBar\n                        showMenu={showMenu}\n                        eventSlug={eventSlug}\n                        handleBackdropRemove={handleBackdropRemove}\n                        handleBackdropShow={handleBackdropShow}\n                    />\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport default HeaderNav\n","import React, { FC, useState, useEffect, useCallback, ReactNode, ChangeEvent, FormEvent,memo } from 'react'\nimport { useLocation, useNavigate, useParams } from 'react-router-dom'\nimport { useIntl } from 'react-intl'\nimport xss from 'xss'\n\nimport Backdrop from '../../components/ui/Backdrop'\nimport CustomModal from '../../components/ui/CustomModal'\nimport Agenda from './agenda/Agenda'\nimport FAQ from './faq/FAQ'\nimport Home from './home/Home'\nimport HeaderNav from './HeaderNav'\nimport '../../styles/landingPage.scss'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchLogin, getLanding } from '../../store/globalSlice'\n\nimport { Obj } from '../../store/globalSlice'\n\nconst LandingPage: FC = memo(() => {\n    const [eventOpen, setEventOpen] = useState(true)\n    const [code, setCode] = useState('')\n    const [showModal, setShowModal] = useState(false)\n    const [modalContent, setModalContent] = useState<ReactNode | null>(null)\n    const [eventSlug, setEventSlug] = useState(process.env.REACT_APP_DEFAULT_EVENT_ID as string)\n    const [showBackdrop, setShowBackdrop] = useState(false)\n    const [showMenu, setShowMenu] = useState(false)\n\n    const {global}:any = useSelector(state => state)\n    const {setting ={} } = global\n    \n    const {main = {}} = setting\n    const {openTime} = main\n    console.log(setting)\n\n    const dispatch = useDispatch()\n   \n\n    const intl = useIntl()\n\n    const location = useLocation()\n    const navigate = useNavigate()\n    const search = location.search.replace('?','')\n\n\n    /**\n     * 獲取資料庫該服務 event id 資料\n     */\n    useEffect(() => {\n        console.log(search, 'search')\n\n        dispatch(getLanding())\n    }, [dispatch])\n\n    /**\n     * 初始化定時任務，設定倒數至活動開始開啟輸入框\n     */\n    useEffect(() => {\n        const now = new Date().getTime()\n            if (new Date(openTime).getTime() >= now) {\n                setEventOpen(true)\n            } \n    }, [openTime])\n\n    \n\n    \n\n    /**\n     * 判斷是否存在錯誤訊息\n     */\n    // useEffect(() => {\n    //     if (eventError || userError) return handleMessageModal()\n    // }, [eventError, userError])\n\n  \n\n\n\n    /**\n     * 若存在錯誤訊息，顯示提示框。若訊息為重複登入初始化用戶登入資訊。\n     * 若是由後台刪除資料庫用戶名單，不顯示提示框只初始化用戶登入資訊。\n     */\n    const handleMessageModal = () => {\n        let errorMessage = ''\n\n        // if (userError) {\n        //     if (userError === 'USER_CODE_ERROR') {\n        //         errorMessage = intl.formatMessage({ id: 'landingPage.USER_CODE_ERROR' })\n        //     } else if (userError === 'USER_EVENT_ID_ERROR') {\n        //         errorMessage = intl.formatMessage({ id: 'landingPage.USER_EVENT_ID_ERROR' })\n        //     } else if (userError === 'USER_LOGIN_IN_DUPLICATE_ERROR') {\n        //         errorMessage = intl.formatMessage({ id: 'landingPage.LoginDuplicated' })\n        //         initUser()\n        //     } else if (userError === 'USER_LIST_DROP') {\n        //         initUser()\n        //         removeUserError()\n        //         return\n        //     } else if (userError === 'USER_LOG_OUT') {\n        //         initUser()\n        //         return\n        //     }\n        // } else errorMessage = intl.formatMessage({ id: 'landingPage.EVENT_ERROR' })\n\n        // setModalContent(<div id=\"login-msg-modal-content\">{errorMessage}</div>)\n        // setShowModal(true)\n        // if (userError) removeUserError()\n    }\n\n    \n\n    /**\n     * 提交登入碼登入會場\n     * @param e form event\n     */\n    const handleSubmit = useCallback(\n        async (e: FormEvent<HTMLFormElement>) => {\n            e.preventDefault()\n            const loginCode = code.toLocaleLowerCase().trim()\n\n            // const ex = '\\\\W'\n\n            // if (loginCode.match(ex)) {\n            //     setModalContent(<div id=\"login-msg-modal-content\">参会码须为英数字</div>)\n            //     setShowModal(true)\n\n            //     return\n            // }\n\n            if (!loginCode) {\n                setModalContent(\n                    <div id=\"login-msg-modal-content\">{intl.formatMessage({ id: 'landingPage.USER_CODE_EMPTY' })}</div>\n                )\n                setShowModal(true)\n                return\n            }\n            localStorage.setItem('code',code)\n            dispatch(fetchLogin(search, code,()=>{navigate('/main')}))\n            setCode('')\n        },\n        [code, location.search]\n    )\n\n\n    /**\n     * 登入框取值\n     * @param e change event\n     */\n    const HandleInputChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        const { value } = e.target\n        setCode(value)\n    }, [])\n\n    /**\n     * 關閉常見問題彈窗\n     */\n    const handleCloseModal = useCallback(() => {\n        setShowModal(false)\n    }, [])\n\n    /**\n     * toggle 行動裝置 backdrop\n     */\n    const handleBackdropShow = useCallback(() => {\n        setShowBackdrop((state) => !state)\n        setShowMenu((state) => !state)\n    }, [])\n\n    /**\n     * 關閉行動裝置 backdrop\n     */\n    const handleBackdropRemove = useCallback(() => {\n        setShowBackdrop(false)\n        setShowMenu(false)\n    }, [])\n\n    return (\n        <main className=\"landing-page-wrap\">\n            {/* <img src={logo ? logo : 'https://oss.uppmkt.com/cxo/img/GOOGLE.svg'} alt=\"\" style={{ display: 'none' }} /> */}\n            <section className=\"landing-page-layout\" id=\"landing-page-layout\">\n                <section className=\"landing-page-layout-main\">\n                    <HeaderNav\n                        handleBackdropShow={handleBackdropShow}\n                        handleBackdropRemove={handleBackdropRemove}\n                        eventSlug={eventSlug}\n                        showMenu={showMenu}\n                    />\n                    <div className=\"landing-page-layout-content\" id=\"landing-page-layout-content\">\n                        <CustomModal handleCloseModal={handleCloseModal} showModal={showModal}>\n                            {modalContent}\n                        </CustomModal>\n                        <Backdrop showBackdrop={showBackdrop} />\n                        <Home\n                            handleSubmit={handleSubmit}\n                            eventOpen={eventOpen}\n                            code={code}\n                            HandleInputChange={HandleInputChange}\n                            eventSlug={eventSlug}\n                        />\n\n                        <Agenda eventSlug={eventSlug} />\n                        <FAQ />\n                    </div>\n                </section>\n            </section>\n        </main>\n    )\n})\n\nexport default LandingPage\n"],"names":["Backdrop","showBackdrop","className","join","memo","DayOne","symbols","venue","jsonData","intl","useIntl","cards","length","map","symbol","trim","toLowerCase","formatMessage","id","src","alt","arrows","infinite","speed","slidesToShow","slidesToScroll","initialSlide","autoplay","dots","responsive","breakpoint","settings","swipe","DayTwo","TabPane","Tabs","eventSlug","useContext","localeContext","location","useLocation","useState","setSymbols","process","setVenue","useEffect","handleGetSymbolAndTopics","ve","keys","Object","topics","filter","key","includes","spks","topic","i","defaultActiveKey","size","animated","inkBar","tabPane","tabBarStyle","color","destroyInactiveTabPane","tab","LoginForm","handleSubmit","eventOpen","code","HandleInputChange","onSubmit","disabled","type","value","onChange","placeholder","Google","paragraph","setParagraph","p","dangerouslySetInnerHTML","__html","Countdown","classes","date","parseInt","intervalDelay","renderer","days","hours","minutes","seconds","isClickToPauseDisabled","options","loop","animationData","LottieJSON","rendererSettings","preserveAspectRatio","target","href","rel","icons","showMenu","handleBackdropRemove","handleBackdropShow","htmlFor","onClick","checked","role","onKeyDown","tabIndex","LandingPage","setEventOpen","setCode","showModal","setShowModal","modalContent","setModalContent","setShowBackdrop","setShowMenu","useSelector","state","global","setting","main","openTime","console","log","dispatch","useDispatch","navigate","useNavigate","search","replace","getLanding","now","Date","getTime","useCallback","e","preventDefault","toLocaleLowerCase","localStorage","setItem","fetchLogin","handleCloseModal","CustomModal","FAQ"],"sourceRoot":""}